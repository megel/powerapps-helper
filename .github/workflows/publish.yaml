on:
  push:
    tags:
      - "v*"

name: Deploy Extension
jobs:
  build-pasopa:
    name: Build PowerApps-Language-Tooling
    strategy:
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}
    env:
      DOTNET_NOLOGO: true
      TOOLS_BIN:  ./Tools
      DIST_BIN:   ./Tools
    steps:
      - name: Install Tools
        shell: pwsh
        run: |
          $toolsDir = "${{ env.TOOLS_BIN }}"
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          $sourceNugetExe = "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"
          $targetNugetExe = ".\nuget.exe"
          Remove-Item $toolsDir -Force -Recurse -ErrorAction Ignore
          Invoke-WebRequest $sourceNugetExe -OutFile $targetNugetExe
          Set-Alias nuget ".\nuget.exe" -Scope Global -Verbose
          ##
          ##Download CoreTools
          ##
          . nuget install  Microsoft.CrmSdk.CoreTools -O $toolsDir
          New-Item $toolsDir\CoreTools -ItemType Directory -Force
          $coreToolsFolder = Get-ChildItem $toolsDir | Where-Object {$_.Name -match 'Microsoft.CrmSdk.CoreTools.'}
          Move-Item "$($coreToolsFolder.FullName)\content\bin\coretools\*" -Destination "$toolsDir\CoreTools" -Force
          Remove-Item $coreToolsFolder.FullName -Force -Recurse       

          # ##
          # ##Download PA Cli
          # ##
          # $distDir        = "${{ env.DIST_BIN }}"
          # $sourcePacNuget = "https://www.nuget.org/api/v2/package/Microsoft.PowerApps.CLI"
          # New-Item "$distDir/pac" -ItemType Directory -Force
          # $pac            = (Find-Package -Name Microsoft.PowerApps.CLI -AllVersions | select -First 1)[0]
          # Invoke-WebRequest $sourcePacNuget -OutFile "$distDir/pac/$($pac.Name.ToLower()).$($pac.version).nupkg"

        if: ${{ runner.os == 'Windows' }} 

      - name: Tools Bin
        uses: actions/upload-artifact@v2
        with:
          name: Tools-bin-${{ matrix.os }}
          path: ${{ env.TOOLS_BIN }}
          retention-days: 1
        if: ${{ runner.os == 'Windows' }} 

      - name: Dist Bin
        uses: actions/upload-artifact@v2
        with:
          name: Dist-bin
          path: ${{ env.DIST_BIN }}
          retention-days: 1
        if: ${{ runner.os == 'Windows' }}

  test:
    name: Test
    needs: build-pasopa
    strategy:
      matrix:
        #os: [macos-latest, ubuntu-latest, windows-latest]
        os: [windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies
        run: npm install

      - name: Download Tools-bin-windows-latest
        uses: actions/download-artifact@v2
        with:
          name: Tools-bin-windows-latest
          path: ./bin/windows

      - name: Download Dist-bin
        uses: actions/download-artifact@v2
        with:
          name: Dist-bin
          path: ./dist
        continue-on-error: true

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - run: dotnet --info

      - name: Run headless test
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm test

  build-extension:
    name:    Build-Extension
    needs:   test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Download Tools-bin-windows-latest
        uses: actions/download-artifact@v2
        with:
          name: Tools-bin-windows-latest
          path: ./bin/windows

      - name: Download Dist-bin
        uses: actions/download-artifact@v2
        with:
          name: Dist-bin
          path: ./dist
        continue-on-error: true

      - name: Install dependencies
        run: npm ci

      - name: Publish to Visual Studio Marketplace
        uses: HaaLeo/publish-vscode-extension@v0
        with:
          pat: ${{ secrets.VS_MARKETPLACE_TOKEN }}
          registryUrl: https://marketplace.visualstudio.com
          baseContentUrl: https://github.com/megel/powerapps-helper/blob/main/
          baseImagesUrl: https://github.com/megel/powerapps-helper/blob/main/

      - name: Save vsix Package as Artifact
        uses: actions/upload-artifact@v2
        with:
          name: VSIX
          retention-days: 10
          path: |
            ./**/*.vsix
            ./CHANGELOG.md